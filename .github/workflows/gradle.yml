# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
    tags:
      - '*'
  pull_request:
    branches: [ "master" ]

jobs:
  build-plugin:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11', '17', '21' ]
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ matrix.Java }} 
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.Java }} 
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: |
        git submodule update --init --recursive
        chmod +x ./gradlew
        ./gradlew build -x test -PWorkflow=YES -PTargetJava=${{ matrix.Java }} 

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        # Artifact name
        name: LuaInMinecraftBukkitII-java-${{ matrix.Java }}
        path: "${{ github.workspace }}/build/libs"

  build-luajava:

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Check working directory
        run: |
          git submodule update --init --recursive
          pwd
          ls
          
      - name: Linux - Make
        if: runner.os == 'Linux'
        run: cd luajava && make

      - name: macOS - Make
        if: runner.os == 'macOS'
        run: cd luajava && make COMMAND="MACOSX_DEPLOYMENT_TARGET=12.0 ./gradlew"

      - name: Windows - Prepare VS Shell
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: Windows - Make
        if: runner.os == 'Windows'
        run: cd luajava && make COMMAND=.\gradlew
      - name: Rename build output directory
        run: |
          mkdir ${{ runner.os }}
          mv ${{ github.workspace }}/luajava/build/outputs/* ${{ runner.os }}
          mv ${{ runner.os }} ${{ github.workspace }}/luajava/build/outputs/
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: luajava-dynamic-libraries-${{ runner.os }}
          path: "${{ github.workspace }}/luajava/build/outputs"

  build-cffi:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        lua: ["lua-5.2.4", "lua-5.3.6", "lua-5.4.8"]

    runs-on: ${{ matrix.os }}
    needs: build-luajava
    steps:
      - uses: actions/checkout@v4
      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.10.0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Setup Meson
        run: pip install meson
      - name: Windows - Prepare VS Shell
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - if: runner.os == 'Windows'
        run: powershell
      - name: Download dynamic libraries
        uses: actions/download-artifact@v4.3.0
        with:
          name: luajava-dynamic-libraries-${{ runner.os }}
          path: "libraries"
      - name: Clone cffi-lua
        run: git clone https://github.com/q66/cffi-lua
      - name: Define variables 
        id: vars
        if: runner.os == 'Linux'
        run: |
          echo "EXTRA_LINKER_ARGS=-L${{ github.workspace }}/cffi-lua/deps -llua" >> "$GITHUB_OUTPUT"
      - name: Build cffi-lua
        run: |
          ls -R libraries
          cd "cffi-lua"
          mkdir deps
          cp ../libraries/${{ runner.os }}/**/${{ matrix.Lua }}/*lua* ./deps
          rm ./deps/*.a || echo "Failed remove *.a"
          curl -L -o archive.tar.gz "https://www.lua.org/ftp/${{ matrix.Lua }}.tar.gz"
          tar -xzf archive.tar.gz
          mv ${{ matrix.Lua }}/src ./deps/include
          echo "-----deps"
          ls deps
          mkdir build
          cd build 
          echo "Extra linker args: ${{ steps.vars.outputs.EXTRA_LINKER_ARGS }}"
          meson .. -Dlua_version=vendor -Dtests=false -Dcpp_link_args="${{ steps.vars.outputs.EXTRA_LINKER_ARGS }}"
          ninja
          mkdir -p cffi/${{ runner.os }}/${{ runner.arch }}/cffi-${{ matrix.Lua }}
          mv *.so cffi/${{ runner.os }}/${{ runner.arch }}/cffi-${{ matrix.Lua }} || echo "Not found *.so"
          mv *.dylib cffi/${{ runner.os }}/${{ runner.arch }}/cffi-${{ matrix.Lua }} || echo "Not found *.dylib"
          mv *.dll cffi/${{ runner.os }}/${{ runner.arch }}/cffi-${{ matrix.Lua }} || echo "Not found *.dll"
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: cffi-dynamic-libraries-${{ runner.os }}-${{ matrix.Lua }}
          path: "${{ github.workspace }}/cffi-lua/build/cffi"

  collect-luajava:

    runs-on: ubuntu-latest
    needs:
      - build-luajava
      - build-plugin

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Download Plugin Artifacts
        uses: actions/download-artifact@v4
        with:
          path: plugin
          name: LuaInMinecraftBukkitII-java-8
      - name: Download Luajava Artifacts
        uses: actions/download-artifact@v4
        with:
          path: luajava-dynamic-libraries
          pattern: luajava-dynamic-libraries-*
          merge-multiple: true
      - run: ls -R luajava-dynamic-libraries
      - run: |
          mkdir -p output/linux/amd64 || echo "Failed mkdir for linux"
          mv luajava-dynamic-libraries/Linux/shared/* output/linux/amd64 || echo "Failed mv to linux"
          mkdir -p output/macos/arm64 || echo "Failed mkdir for macos"
          mv luajava-dynamic-libraries/macOS/shared/* output/macos/arm64 || echo "Failed mv to macos"
          mkdir -p output/windows/amd64 || echo "Failed mkdir for windows"
          mv luajava-dynamic-libraries/Windows/shared/* output/windows/amd64 || echo "Failed mv to windows"
          rm -rf output/windows/amd64/**/*.lib || echo "Failed remove *.lib"
          rm -rf output/windows/amd64/**/*.exp || echo "Failed remove *.exp"
          mv plugin/*-all.jar plugin/a.jar
          java -cp plugin/a.jar org.eu.smileyik.luaInMinecraftBukkitII.NativeLoader ./output
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: all-luajava-dynamic-libraries
          path: "${{ github.workspace }}/output"

  collect-cffi:
  
    runs-on: ubuntu-latest
    needs: build-cffi

    steps:
      - uses: actions/checkout@v4
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: cffi-dynamic-libraries
          pattern: cffi-dynamic-libraries-*
          merge-multiple: true
      - run: ls -R cffi-dynamic-libraries
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: all-cffi-dynamic-libraries
          path: "${{ github.workspace }}/cffi-dynamic-libraries"

  release:

    runs-on: ubuntu-latest
    needs:
      - build-plugin
      - collect-cffi
      - collect-luajava
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          path: "downloaded-artifacts"

      - name: List Downloaded Artifacts
        run: ls -R downloaded-artifacts
      - name: Package shared libraries
        run: |
          cd downloaded-artifacts
          tar -czf all-luajava-dynamic-libraries.tar.gz all-luajava-dynamic-libraries || echo "failed package luajava"
          tar -czf all-cffi-dynamic-libraries.tar.gz all-cffi-dynamic-libraries || echo "failed package cffi"

      - name: Create Release Draft
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          generateReleaseNotes: true
          artifacts: "downloaded-artifacts/LuaInMinecraftBukkitII-java-8/*.jar,downloaded-artifacts/*.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
