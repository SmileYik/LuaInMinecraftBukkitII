# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
    tags:
      - '*'
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11', '17', '21' ]
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ matrix.Java }} 
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.Java }} 
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: |
        git submodule update --init --recursive
        chmod +x ./gradlew
        ./gradlew build -x test -PWorkflow=YES -PTargetJava=${{ matrix.Java }} 

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        # Artifact name
        name: LuaInMinecraftBukkitII-java-${{ matrix.Java }}
        path: "${{ github.workspace }}/build/libs"

  release:

    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          path: "downloaded-artifacts"

      - name: List Downloaded Artifacts
        run: ls -R downloaded-artifacts

      - name: Create Release Draft
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          generateReleaseNotes: true
          artifacts: "downloaded-artifacts/**/*.jar"
          token: ${{ secrets.GITHUB_TOKEN }}