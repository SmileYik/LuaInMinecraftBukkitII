plugins {
    id 'java'
    id "xyz.jpenilla.run-paper" version "2.3.1"
    id "com.gradleup.shadow" version "8.3.6"
}

group = 'org.eu.smileyik'
version = '1.0.0-SNAPSHOT'

repositories {
    maven {
        url "https://maven-v4.smileyik.eu.org:60081/public"
    }

    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    annotationProcessor 'org.jetbrains:annotations:24.0.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly 'org.jetbrains:annotations:24.0.0'
    compileOnly 'org.projectlombok:lombok:1.18.30'

    compileOnly("org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT")
    testImplementation("org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT")

    implementation project(":luajava:java")
    // command
    implementation("org.eu.smileyik:SimpleCommand:1.0.7-SNAPSHOT")
    // SimpleDebug
    implementation 'org.eu.smileyik:SimpleDebug:1.0.2-SNAPSHOT'
    // byte buddy
    implementation 'net.bytebuddy:byte-buddy:1.17.0'
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.12.2")
    }
}


test {
    useJUnitPlatform()
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'org.eu.smileyik.simpledebug', 'org.eu.smileyik.luaInMinecraftBukkitII.simpledebug'
    relocate 'org.eu.smileyik.simplecommand', 'org.eu.smileyik.luaInMinecraftBukkitII.simplecommand'
}
